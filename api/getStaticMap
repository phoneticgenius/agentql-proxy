// api/getStaticMap.js
import fetch from 'node-fetch'; // Vercel's Node.js runtime has fetch available or you can use axios as before.

// Load API key from environment variables configured in Vercel
// This is crucial for security.
const GOOGLE_STATIC_MAPS_API_KEY = process.env.GOOGLE_STATIC_MAPS_API_KEY;

export default async function handler(req, res) {
    // Ensure API key is set
    if (!GOOGLE_STATIC_MAPS_API_KEY) {
        console.error("GOOGLE_STATIC_MAPS_API_KEY environment variable is not set!");
        return res.status(500).send('Server configuration error: Map API key missing.');
    }

    const { address } = req.query;

    if (!address) {
        return res.status(400).send('Address parameter is required.');
    }

    try {
        // Construct the Google Static Maps API URL
        // You can customize size, zoom, markers, etc.
        const staticMapsUrl = `https://maps.googleapis.com/maps/api/staticmap?center=${encodeURIComponent(address)}&zoom=15&size=600x300&markers=color:red%7Clabel:A%7C${encodeURIComponent(address)}&key=${GOOGLE_STATIC_MAPS_API_KEY}`;

        console.log(`Fetching static map for address: "${address}" from: ${staticMapsUrl}`);

        const response = await fetch(staticMapsUrl);

        if (!response.ok) {
            const errorText = await response.text();
            console.error(`Google Static Maps API error: ${response.status} ${response.statusText} - ${errorText}`);
            return res.status(response.status).send(`Error from Google Maps API: ${errorText}`);
        }

        // Get the image data as an ArrayBuffer
        const imageBuffer = await response.arrayBuffer();

        // Set the appropriate content type header for the image
        const contentType = response.headers.get('content-type') || 'image/png';
        res.setHeader('Content-Type', contentType);

        // Send the image buffer as the response
        res.send(Buffer.from(imageBuffer)); // Convert ArrayBuffer to Node.js Buffer

    } catch (error) {
        console.error('Error in Vercel Serverless Function (getStaticMap):', error.message);
        res.status(500).send('Internal server error while generating map image.');
    }
}
